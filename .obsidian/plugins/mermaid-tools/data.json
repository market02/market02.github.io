{
  "elements": [
    {
      "id": "87282385-3e0b-4b6a-b5f8-1b0e7069eb99",
      "categoryId": "flowchart",
      "description": "a simple flowchart with top to down direction",
      "content": "flowchart TD\nStart --> Stop",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "e8a00791-fd12-4f22-bab7-18a43ad3b890",
      "categoryId": "flowchart",
      "description": "a simple flowchart with left to right direction",
      "content": "flowchart LR\nStart --> Stop",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "00ea3ecc-56b8-4352-838a-4a9e58cb0766",
      "categoryId": "flowchart",
      "description": "A node with round edges",
      "content": "id1(Some text)",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "f0efb4fc-2079-47b0-904f-e3fd0a408c43",
      "categoryId": "flowchart",
      "description": "A stadium-shaped node",
      "content": "id1([Some text])",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "46091a39-5596-4d73-b2dd-aae4cf673ebd",
      "categoryId": "flowchart",
      "description": "A node in a cylindrical shape",
      "content": "id1[(Database)]",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "54dab7a1-883d-4639-b204-cd367887f943",
      "categoryId": "flowchart",
      "description": "Circle",
      "content": "id1((Some text))",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "5051ace8-484d-499e-ada2-7fa602c7fa98",
      "categoryId": "flowchart",
      "description": "Rhombus",
      "content": "id1{Some text}",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "7b58dc3a-cc6e-446e-aeff-41649b14224d",
      "categoryId": "flowchart",
      "description": "Hexagon",
      "content": "id1{{Some text}}",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "438ffcb0-f2f6-4995-b3ad-b4e92feb0043",
      "categoryId": "flowchart",
      "description": "Parallelogram skewed right",
      "content": "id1[/Some text/]",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "a728329e-f810-4a29-866c-8ad2c759073c",
      "categoryId": "flowchart",
      "description": "Parallelogram skewed left",
      "content": "id1[\\Some text\\]",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "f33e0cc0-42de-4e5e-b8f7-16d05df3a8cb",
      "categoryId": "flowchart",
      "description": "Trapezoid",
      "content": "A[/Some text\\]",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "cd2811fa-8cae-407a-977c-3c02ec04c141",
      "categoryId": "flowchart",
      "description": "Trapezoid upside down",
      "content": "A[\\Some text/]",
      "sortingOrder": 12,
      "isPinned": false
    },
    {
      "id": "561b1f50-c7e5-4be7-a2e6-343a3adb129a",
      "categoryId": "flowchart",
      "description": "Double circle node",
      "content": "id1(((Some text)))",
      "sortingOrder": 13,
      "isPinned": false
    },
    {
      "id": "aac274b1-cf35-42e1-bd5d-d641de748161",
      "categoryId": "flowchart",
      "description": "A link with arrow head",
      "content": "A-->B",
      "sortingOrder": 14,
      "isPinned": false
    },
    {
      "id": "58b8002f-ded1-43c5-b12a-f5887bf12c78",
      "categoryId": "flowchart",
      "description": "An open link",
      "content": "A --- B",
      "sortingOrder": 15,
      "isPinned": false
    },
    {
      "id": "89bce763-b5ef-4974-bd59-00feae59058f",
      "categoryId": "flowchart",
      "description": "Text on links",
      "content": "A-- This is the text! ---B",
      "sortingOrder": 16,
      "isPinned": false
    },
    {
      "id": "bbb6e14f-6ab9-4a18-8bb0-c840afac4f41",
      "categoryId": "flowchart",
      "description": "A link with arrow head and text",
      "content": "A-->|text|B",
      "sortingOrder": 17,
      "isPinned": false
    },
    {
      "id": "48c8e706-174e-4119-a956-6503851db67c",
      "categoryId": "flowchart",
      "description": "Dotted link",
      "content": "A-.->B",
      "sortingOrder": 18,
      "isPinned": false
    },
    {
      "id": "cde1e3c1-3484-4b3f-8196-65326428326a",
      "categoryId": "flowchart",
      "description": "Thick link",
      "content": "A ==> B",
      "sortingOrder": 19,
      "isPinned": false
    },
    {
      "id": "787dc963-1547-448d-b56a-40ba3278b4cc",
      "categoryId": "flowchart",
      "description": "Invisible link",
      "content": "A ~~~ B",
      "sortingOrder": 20,
      "isPinned": false
    },
    {
      "id": "5a7c2b78-f24f-4512-b83b-fc965fe24fc0",
      "categoryId": "flowchart",
      "description": "Link with circle edge",
      "content": "A --o B",
      "sortingOrder": 21,
      "isPinned": false
    },
    {
      "id": "09587e79-abdb-4a5e-b560-018fff477056",
      "categoryId": "flowchart",
      "description": "Link with cross edge",
      "content": "A --x B",
      "sortingOrder": 22,
      "isPinned": false
    },
    {
      "id": "2788b76c-5c2d-487d-9d26-add64dd89809",
      "categoryId": "flowchart",
      "description": "Subgraph",
      "content": "subgraph one\na1-->a2\nend",
      "sortingOrder": 14,
      "isPinned": false
    },
    {
      "id": "2fd857b6-e87c-4c14-9dfc-d6cd9685b6c5",
      "categoryId": "sequenceDiagram",
      "description": "a simple sequence diagram",
      "content": "sequenceDiagram\nAlice->>John: Hello John, how are you?\nJohn-->>Alice: Great!\nAlice-)John: See you later!",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "97a3cd03-6954-4f53-a6cc-719956546735",
      "categoryId": "sequenceDiagram",
      "description": "a simple sequence diagram with actors",
      "content": "sequenceDiagram\nactor Alice\nactor John\nAlice->>John: Hello John, how are you?\nJohn-->>Alice: Great!\nAlice-)John: See you later!",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "c643b7bf-d1fa-40a6-8520-305f4f58e198",
      "categoryId": "userJourneyDiagram",
      "description": "a sample user journey diagram",
      "content": "journey\n        title My working day\n        section Go to work\n          Make tea: 5: Me\n          Go upstairs: 3: Me\n          Do work: 1: Me, Cat\n        section Go home\n          Go downstairs: 5: Me\n          Sit down: 5: Me",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "616b5f44-c4e1-4698-9527-69366e3e6a29",
      "categoryId": "userJourneyDiagram",
      "description": "a step in user journey",
      "content": "      Step Title: 5: ActorName",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "8ee1099b-2615-4f17-84bc-94a3c142ae9f",
      "categoryId": "ganttChart",
      "description": "simple gantt chart",
      "content": "gantt\n        title A Gantt Diagram\n        dateFormat  YYYY-MM-DD\n        section Section\n        A task           :a1, 2014-01-01, 30d\n        Another task     :after a1  , 20d\n        section Another\n        Task in sec      :2014-01-12  , 12d\n        another task      : 24d",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "ba9edeca-66b7-40aa-864c-b80374a5d43d",
      "categoryId": "ganttChart",
      "description": "rich gantt chart",
      "content": "gantt\n        dateFormat  YYYY-MM-DD\n        title       Adding GANTT diagram functionality to mermaid\n        excludes    weekends\n    \n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2              :         des4, after des3, 5d\n    \n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n        Functionality added                 :milestone, 2014-01-25, 0d\n    \n        section Documentation\n        Describe gantt syntax               :active, a1, after des1, 3d\n        Add gantt diagram to demo page      :after a1  , 20h\n        Add another diagram to demo page    :doc1, after a1  , 48h\n    \n        section Last section\n        Describe gantt syntax               :after doc1, 3d\n        Add gantt diagram to demo page      :20h\n        Add another diagram to demo page    :48h",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "8327a36c-29a6-454b-9ed1-a47d90f2c528",
      "categoryId": "ganttChart",
      "description": "milestones example",
      "content": "gantt\n        dateFormat HH:mm\n        axisFormat %H:%M\n        Initial milestone : milestone, m1, 17:49,2min\n        taska2 : 10min\n        taska3 : 5min\n        Final milestone : milestone, m2, 18:14, 2min",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "32976417-47c5-4a88-8f0f-a818d4c7ce2e",
      "categoryId": "pieChart",
      "description": "sample pie chart",
      "content": "pie title /r/obsidianmd posts by type\n        \"Graphs\" : 85\n        \"Dashboards\" : 14\n        \"Tips\" : 1",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "d5ff7b48-8de2-45af-a30e-c816a67b19ec",
      "categoryId": "pieChart",
      "description": "sample pie chart with values shown in legend",
      "content": "pie showData title /r/obsidianmd posts by type\n        \"Graphs\" : 85\n        \"Dashboards\" : 14\n        \"Tips\" : 1",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "654b5f76-024d-41a1-9d87-e0d697af898a",
      "categoryId": "requirementDiagram",
      "description": "sample requirements diagram",
      "content": "    requirementDiagram\n\n        requirement test_req {\n        id: 1\n        text: the test text.\n        risk: high\n        verifymethod: test\n        }\n    \n        element test_entity {\n        type: simulation\n        }\n    \n        test_entity - satisfies -> test_req",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "2a7376c8-dc86-49b8-8b69-1350530adcd4",
      "categoryId": "requirementDiagram",
      "description": "sample requirements diagram",
      "content": "element customElement {\n            type: customType\n            docref: customDocRef\n        }",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "47405197-5d9c-4dac-adff-fec5f3241ee1",
      "categoryId": "requirementDiagram",
      "description": "a requirement with high risk",
      "content": "functionalRequirement myReq {\n            id: reqId\n            text: someText\n            risk: High\n            verifymethod: analysis\n        }",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "4b94d671-3338-45c1-a2e8-11c8af35ee02",
      "categoryId": "requirementDiagram",
      "description": "sample requirements diagram",
      "content": "interfaceRequirement myReq2 {\n            id: reqId\n            text: someText\n            risk: Medium\n            verifymethod: demonstration\n        }",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "85457322-c207-4614-a9fd-a3fd2d0fa999",
      "categoryId": "requirementDiagram",
      "description": "sample requirements diagram",
      "content": "designConstraint myReq3 {\n            id: reqId\n            text: someText\n            risk: Low\n            verifymethod: test\n        }",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "f0a91f45-d6c3-4e0e-9ba8-ccf33b783afb",
      "categoryId": "gitGraph",
      "description": "simple git graph",
      "content": "gitGraph\n        commit\n        commit\n        branch develop\n        checkout develop\n        commit\n        commit\n        checkout main\n        merge develop\n        commit\n        commit",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "1f89d1a7-b324-42ca-acce-c511b25b5f61",
      "categoryId": "gitGraph",
      "description": "tagged commit",
      "content": "commit id: \"Normal\" tag: \"v1.0.0\"",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "859f3ecf-7dac-49ab-bac9-0dbc81d9c3e3",
      "categoryId": "gitGraph",
      "description": "reverse commit",
      "content": "commit id: \"Reverse\" type: REVERSE",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "a5a26bca-52fb-4c6c-8d00-e7a8a7706b9c",
      "categoryId": "gitGraph",
      "description": "highlighted commit",
      "content": "commit id: \"Highlight\" type: HIGHLIGHT",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "82c3e532-252d-4dcf-b4ad-a37f6a14186e",
      "categoryId": "gitGraph",
      "description": "reverse commit",
      "content": "commit id: \"Reverse\" type: REVERSE",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "8edf0893-9884-438e-9bee-f4260d34f160",
      "categoryId": "gitGraph",
      "description": "git graph with cherry-pick",
      "content": "gitGraph\n        commit id: \"ZERO\"\n        branch develop\n        commit id:\"A\"\n        checkout main\n        commit id:\"ONE\"\n        checkout develop\n        commit id:\"B\"\n        checkout main\n        commit id:\"TWO\"\n        cherry-pick id:\"A\"\n        commit id:\"THREE\"\n        checkout develop\n        commit id:\"C\"",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "ea57660c-3db5-4e8d-84ea-e7637c722442",
      "categoryId": "mindmap",
      "description": "a simple mindmap",
      "content": "mindmap\n        Root\n            A\n              B\n              C",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "7a4c6cb3-8c06-4e40-95e3-f0b3b0e762d0",
      "categoryId": "mindmap",
      "description": "square",
      "content": "id[I am a square]",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "2095749a-99c4-4cca-98da-91cf9f7f1f1e",
      "categoryId": "mindmap",
      "description": "rounded square",
      "content": "id(I am a rounded square)",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "18992819-c721-40e7-80eb-863fac213d47",
      "categoryId": "mindmap",
      "description": "circle",
      "content": "id((I am a circle))",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "c10fda21-ffd4-4d6d-b0d4-9a896b26f52b",
      "categoryId": "mindmap",
      "description": "bang",
      "content": "id))I am a bang((",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "23fe232a-bc65-48b7-b572-b2759e428de6",
      "categoryId": "mindmap",
      "description": "cloud",
      "content": "id)I am a cloud(",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "95ade655-095a-4608-8452-60774c1fa0a6",
      "categoryId": "mindmap",
      "description": "hexagon",
      "content": "id{{I am a hexagon}}",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "28abef30-8e7a-4263-9982-23a1ab9f09ce",
      "categoryId": "mindmap",
      "description": "default",
      "content": "I am the default shape",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "77096af9-2964-4a76-acb9-976d05e73776",
      "categoryId": "mindmap",
      "description": "sample mindmap",
      "content": "mindmap\n        root((mindmap))\n          Origins\n            Long history\n            Popularisation\n              British popular psychology author Tony Buzan\n          Research\n            On effectiveness<br/>and features\n            On Automatic creation\n              Uses\n                  Creative techniques\n                  Strategic planning\n                  Argument mapping\n          Tools\n            Pen and paper\n            Mermaid",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "cd876b40-3a1e-49b8-8c35-70f4b184c1bb",
      "categoryId": "timeline",
      "description": "sample timeline",
      "content": "timeline\n\t\ttitle History of Social Media Platform\n\t\t2002 : LinkedIn\n\t\t2004 : Facebook\n\t\t\t : Google\n\t\t2005 : Youtube\n\t\t2006 : Twitter",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "e9f8ec8a-0124-4a03-ae06-f490c0a916a2",
      "categoryId": "timeline",
      "description": "timeline with grouping",
      "content": "timeline\n\t\ttitle Timeline of Industrial Revolution\n\t\tsection 17th-20th century\n\t\t\tIndustry 1.0 : Machinery, Water power, Steam <br>power\n\t\t\tIndustry 2.0 : Electricity, Internal combustion engine, Mass production\n\t\t\tIndustry 3.0 : Electronics, Computers, Automation\n\t\tsection 21st century\n\t\t\tIndustry 4.0 : Internet, Robotics, Internet of Things\n\t\t\tIndustry 5.0 : Artificial intelligence, Big data,3D printing",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "c5e26908-093b-494e-914b-95bfa9326496",
      "categoryId": "timeline",
      "description": "timeline with Forest theme. see the docs for additional themes",
      "content": "%%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%%\n\t\ttimeline\n\t\t\ttitle History of Social Media Platform\n\t\t\t  2002 : LinkedIn\n\t\t\t  2004 : Facebook : Google\n\t\t\t  2005 : Youtube\n\t\t\t  2006 : Twitter\n\t\t\t  2007 : Tumblr\n\t\t\t  2008 : Instagram\n\t\t\t  2010 : Pinterest",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "5548ae93-ab0b-4491-81a6-82c0b1d7bab7",
      "categoryId": "quadrantChart",
      "description": "sample quadrant chart",
      "content": "quadrantChart\n\t\ttitle Reach and engagement of campaigns\n\t\tx-axis Low Reach --> High Reach\n\t\ty-axis Low Engagement --> High Engagement\n\t\tquadrant-1 We should expand\n\t\tquadrant-2 Need to promote\n\t\tquadrant-3 Re-evaluate\n\t\tquadrant-4 May be improved\n\t\tCampaign A: [0.3, 0.6]\n\t\tCampaign B: [0.45, 0.23]\n\t\tCampaign C: [0.57, 0.69]\n\t\tCampaign D: [0.78, 0.34]\n\t\tCampaign E: [0.40, 0.34]\n\t\tCampaign F: [0.35, 0.78]",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "db3abd63-e853-4c50-b2e7-dc90a4184325",
      "categoryId": "quadrantChart",
      "description": "themed quadrant chart",
      "content": "%%{init: {\"quadrantChart\": {\"chartWidth\": 400, \"chartHeight\": 400}, \"themeVariables\": {\"quadrant1TextFill\": \"#ff0000\"} }}%%\n\t\tquadrantChart\n\t\t  x-axis Urgent --> Not Urgent\n\t\t  y-axis Not Important --> \"Important ❤\"\n\t\t  quadrant-1 Plan\n\t\t  quadrant-2 Do\n\t\t  quadrant-3 Delegate\n\t\t  quadrant-4 Delete",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "51a04128-d729-4a8b-90b6-c434ea267d63",
      "categoryId": "c4Diagram",
      "description": "sample C4 diagram (compatible with PlantUML)",
      "content": "C4Context\n\t\ttitle System Context diagram for Internet Banking System\n\t\tEnterprise_Boundary(b0, \"BankBoundary0\") {\n\t\t  Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\")\n\t\t  Person(customerB, \"Banking Customer B\")\n\t\t  Person_Ext(customerC, \"Banking Customer C\", \"desc\")\n  \n\t\t  Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\")\n  \n\t\t  System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\")\n  \n\t\t  Enterprise_Boundary(b1, \"BankBoundary\") {\n  \n\t\t\tSystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\n  \n\t\t\tSystem_Boundary(b2, \"BankBoundary2\") {\n\t\t\t  System(SystemA, \"Banking System A\")\n\t\t\t  System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\")\n\t\t\t}\n  \n\t\t\tSystem_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\")\n\t\t\tSystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\")\n  \n\t\t\tBoundary(b3, \"BankBoundary3\", \"boundary\") {\n\t\t\t  SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\")\n\t\t\t  SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\")\n\t\t\t}\n\t\t  }\n\t\t}\n  \n\t\tBiRel(customerA, SystemAA, \"Uses\")\n\t\tBiRel(SystemAA, SystemE, \"Uses\")\n\t\tRel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\")\n\t\tRel(SystemC, customerA, \"Sends e-mails to\")\n  \n\t\tUpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\")\n\t\tUpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\")\n\t\tUpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\")\n\t\tUpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\")\n\t\tUpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\")\n  \n\t\tUpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\")",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "1e860a35-0435-482a-b06b-fcea76ddd831",
      "categoryId": "sankeyDiagram",
      "description": "",
      "content": "sankey-beta\n        %% source,target,value\n        Electricity grid,Over generation / exports,104.453\n        Electricity grid,Heating and cooling - homes,113.726\n        Electricity grid,H2 conversion,27.14",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "79bf0c7c-a158-4989-b808-797ebe824865",
      "categoryId": "xyChart",
      "description": "a sample XYChart diagram",
      "content": "xychart-beta\n        title \"Sales Revenue\"\n        x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec]\n        y-axis \"Revenue (in $)\" 4000 --> 11000\n        bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]\n        line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "05614115-38f2-4559-b885-d5125f4f7608",
      "categoryId": "packet",
      "description": "a sample packet diagram",
      "content": "packet-beta\ntitle UDP Packet\n0-15: \"Source Port\"\n16-31: \"Destination Port\"\n32-47: \"Length\"\n48-63: \"Checksum\"\n64-95: \"Data (variable length)\"\n",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "adafab5e-d840-4c17-8770-689b3e0173a7",
      "categoryId": "kanban",
      "description": "a sample kanban diagram",
      "content": "kanban\n  Todo\n    [Create Documentation]\n    docs[Create Blog about the new diagram]\n  [In progress]\n    id6[Create renderer so that it works in all cases. We also add som extra text here for testing purposes. And some more just for the extra flare.]\n  id9[Ready for deploy]\n    id8[Design grammar]@{ assigned: 'knsv' }\n  id10[Ready for test]\n    id4[Create parsing tests]@{ ticket: MC-2038, assigned: 'K.Sveidqvist', priority: 'High' }\n    id66[last item]@{ priority: 'Very Low', assigned: 'knsv' }\n  id11[Done]\n    id5[define getData]\n    id2[Title of diagram is more than 100 chars when user duplicates diagram with 100 char]@{ ticket: MC-2036, priority: 'Very High'}\n    id3[Update DB function]@{ ticket: MC-2037, assigned: knsv, priority: 'High' }\n\n  id12[Can't reproduce]\n    id3[Weird flickering in Firefox]",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "793973a0-a6ac-479e-9ebe-d16fd9dd13e4",
      "categoryId": "block",
      "description": "a sample block diagram",
      "content": "block-beta\ncolumns 1\n  db((\"DB\"))\n  blockArrowId6<[\"&nbsp;&nbsp;&nbsp;\"]>(down)\n  block:ID\n    A\n    B[\"A wide one in the middle\"]\n    C\n  end\n  space\n  D\n  ID --> D\n  C --> D\n  style B fill:#969,stroke:#333,stroke-width:4px\n",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "839defd7-e84b-4de3-af2b-0320d92a9c4c",
      "categoryId": "architecture",
      "description": "a sample architecture diagram",
      "content": "architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db\n",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "4a76550e-7d6e-4289-a12f-f3b47e1e8ab2",
      "categoryId": "entityRelationshipDiagram",
      "description": "a sample entity relationship diagram",
      "content": "erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n        CUSTOMER }|..|{ DELIVERY-ADDRESS : uses",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "b7b885ac-15c6-40d8-869e-9f6f035eaf90",
      "categoryId": "entityRelationshipDiagram",
      "description": "an entity",
      "content": "    CUSTOMER {\n            string name\n            string custNumber\n            string sector\n        }",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "713cb540-5a3e-4d0c-a584-5c84e42882a6",
      "categoryId": "entityRelationshipDiagram",
      "description": "one-to-many relationship",
      "content": "A ||--|{ B : label",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "6727eaa9-8ded-4227-be4c-80a374177fa9",
      "categoryId": "entityRelationshipDiagram",
      "description": "many-to-many relationship",
      "content": "A }|--|{ B : label",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "09fd512d-e7e2-4fac-8281-803f680d97f5",
      "categoryId": "entityRelationshipDiagram",
      "description": "one-to-one relationship",
      "content": "A ||--|| B : label",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "bc330ee7-edde-4fb6-9b01-8aa8131718a7",
      "categoryId": "entityRelationshipDiagram",
      "description": "many-to-one relationship",
      "content": "A }|--|| B : label",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "109c83d5-d420-4979-a1f7-2602f6d7ec0b",
      "categoryId": "entityRelationshipDiagram",
      "description": "zero/one-to-one relationship",
      "content": "A |o--|| B : label",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "4288224d-49ce-419b-bd38-9ed06ff5decf",
      "categoryId": "entityRelationshipDiagram",
      "description": "one-to-one/zero relationship",
      "content": "A ||--o| B : label",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "6df0e2d8-d5b8-4c6a-8b26-fec0aa15abd9",
      "categoryId": "entityRelationshipDiagram",
      "description": "zero-or-more-to-one relationship",
      "content": "A }o--|| B : label",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "f22365a9-113b-41d1-9e68-8b39d99875a1",
      "categoryId": "entityRelationshipDiagram",
      "description": "one-to-zero-or-more relationship",
      "content": "A ||--o{ B : label",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "5bd35439-f726-4c76-a862-468c045c53e2",
      "categoryId": "entityRelationshipDiagram",
      "description": "zero-or-more-to-many relationship",
      "content": "A }o--|{ B : label",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "11d7ae81-b79a-41cd-89e7-6419da18a3a8",
      "categoryId": "entityRelationshipDiagram",
      "description": "many-to-zero-or-more relationship",
      "content": "A }|--o{ B : label",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "2e0a6f79-7462-41d8-8bec-656da3771e2f",
      "categoryId": "classDiagram",
      "description": "sample class",
      "content": "class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n        }",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "9ff06ce4-f1b5-4d37-b77f-210773229b0d",
      "categoryId": "classDiagram",
      "description": "sample class",
      "content": "class BankAccount\n        BankAccount : +String owner\n        BankAccount : +Bigdecimal balance\n        BankAccount : +deposit(amount)\n        BankAccount : +withdrawal(amount)",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "eeac1952-1881-476c-8254-2a25ec4306b7",
      "categoryId": "classDiagram",
      "description": "generic class",
      "content": "class Square~Shape~{\n            int id\n            List~int~ position\n            setPoints(List~int~ points)\n            getPoints() List~int~\n        }\n        \n        Square : -List~string~ messages\n        Square : +setMessages(List~string~ messages)\n        Square : +getMessages() List~string~",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "623f1304-5478-4207-9f3f-bf7a129e7e11",
      "categoryId": "classDiagram",
      "description": "inheritance",
      "content": "classA <|-- classB",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "83f719a1-f341-48d9-a1b6-7d76a5e56ceb",
      "categoryId": "classDiagram",
      "description": "composition",
      "content": "classC *-- classD",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "ecdaabc0-6162-46d3-bda4-2bf8ee941767",
      "categoryId": "classDiagram",
      "description": "aggregation",
      "content": "classE o-- classF",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "9c9e7817-0840-472f-ab7f-213fc24ad517",
      "categoryId": "classDiagram",
      "description": "association",
      "content": "classG <-- classH",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "27eebda4-781e-406f-a829-fc9fadc04a85",
      "categoryId": "classDiagram",
      "description": "solid link",
      "content": "classI -- classJ",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "de4b2329-9800-42d2-9b8a-433626c0bc06",
      "categoryId": "classDiagram",
      "description": "dependency",
      "content": "classK <.. classL",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "876aace8-d577-46ca-b611-a08a73336f8d",
      "categoryId": "classDiagram",
      "description": "realization",
      "content": "classM <|.. classN",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "15cfd4c6-8ec5-4b88-a36a-c88d4f25f823",
      "categoryId": "classDiagram",
      "description": "dashed link",
      "content": "classO .. classP",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "6e676f0b-8c02-46ca-919b-9fa8ed4cfc6a",
      "categoryId": "classDiagram",
      "description": "two-way relation",
      "content": "Animal <|--|> Zebra",
      "sortingOrder": 12,
      "isPinned": false
    },
    {
      "id": "c2776d4b-9e68-46d4-b80e-a17ed2486518",
      "categoryId": "classDiagram",
      "description": "sample class diagram",
      "content": "classDiagram\n        Animal <|-- Duck\n        Animal <|-- Fish\n        Animal <|-- Zebra\n        Animal : +int age\n        Animal : +String gender\n        Animal: +isMammal()\n        Animal: +mate()\n        class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n        }\n        class Fish{\n            -int sizeInFeet\n            -canEat()\n        }\n        class Zebra{\n            +bool is_wild\n            +run()\n        }",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "776c0c39-9210-409b-883a-77f1b837db33",
      "categoryId": "stateDiagram",
      "description": "a sample state diagram",
      "content": "stateDiagram-v2\n        [*] --> Still\n        Still --> [*]\n    \n        Still --> Moving\n        Moving --> Still\n        Moving --> Crash\n        Crash --> [*]",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "02e9b7fe-4647-4714-bf5a-7e15e8d11c28",
      "categoryId": "stateDiagram",
      "description": "a sample state diagram with left-to-right direction",
      "content": "stateDiagram-v2\n        direction LR\n        [*] --> Still\n        Still --> [*]\n    \n        Still --> Moving\n        Moving --> Still\n        Moving --> Crash\n        Crash --> [*]",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "1a978230-fc4a-4d2d-a2bc-df28621cb53d",
      "categoryId": "stateDiagram",
      "description": "node with description",
      "content": "s2 : This is a state description",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "add20e41-36ed-45d4-aa69-f03ef25a2877",
      "categoryId": "stateDiagram",
      "description": "a transition",
      "content": "s1 --> s2",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "18f2cce7-dde2-4347-b518-7c64cf07c29b",
      "categoryId": "stateDiagram",
      "description": "a transition with label",
      "content": "s1 --> s2: A transition",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "69011e89-b366-448a-83e2-3deb07ac29e8",
      "categoryId": "stateDiagram",
      "description": "composite state",
      "content": "\n        [*] --> First\n        state First {\n            [*] --> second\n            second --> [*]\n        }",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "28fcfd7b-efff-40ac-95b8-5254d67a5fcb",
      "categoryId": "stateDiagram",
      "description": "diagram with choice",
      "content": "stateDiagram-v2\n        state if_state <<choice>>\n        [*] --> IsPositive\n        IsPositive --> if_state\n        if_state --> False: if n < 0\n        if_state --> True : if n >= 0",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "c67a7d26-3872-42bc-b1c3-945889e0a669",
      "categoryId": "stateDiagram",
      "description": "diagram with fork",
      "content": "stateDiagram-v2\n        state fork_state <<fork>>\n          [*] --> fork_state\n          fork_state --> State2\n          fork_state --> State3\n    \n          state join_state <<join>>\n          State2 --> join_state\n          State3 --> join_state\n          join_state --> State4\n          State4 --> [*]",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "55f8854f-f39a-4ee2-9191-a39697db5bff",
      "categoryId": "stateDiagram",
      "description": "a diagram with concurrency",
      "content": "stateDiagram-v2\n        [*] --> Active\n    \n        state Active {\n            [*] --> NumLockOff\n            NumLockOff --> NumLockOn : EvNumLockPressed\n            NumLockOn --> NumLockOff : EvNumLockPressed\n            --\n            [*] --> CapsLockOff\n            CapsLockOff --> CapsLockOn : EvCapsLockPressed\n            CapsLockOn --> CapsLockOff : EvCapsLockPressed\n            --\n            [*] --> ScrollLockOff\n            ScrollLockOff --> ScrollLockOn : EvScrollLockPressed\n            ScrollLockOn --> ScrollLockOff : EvScrollLockPressed\n        }",
      "sortingOrder": 8,
      "isPinned": false
    }
  ],
  "customCategories": [],
  "selectedCategoryId": "stateDiagram",
  "defaultCategorySortOrders": {
    "flowchart": 0,
    "sequenceDiagram": 1,
    "stateDiagram": 3,
    "classDiagram": 2,
    "entityRelationshipDiagram": 4,
    "userJourneyDiagram": 5,
    "ganttChart": 6,
    "pieChart": 7,
    "requirementDiagram": 8,
    "gitGraph": 9,
    "mindmap": 10,
    "timeline": 11,
    "c4Diagram": 12,
    "quadrantChart": 13,
    "sankeyDiagram": 14,
    "xyChart": 15,
    "kanban": 16,
    "architecture": 17,
    "block": 18,
    "packet": 19
  },
  "categoryModifications": {}
}